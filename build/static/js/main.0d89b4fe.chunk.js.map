{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","CN","card","infected","CardContent","cardBlock","infectedBlock","Typography","color","gutterBottom","cardTitle","varaint","cardNumber","start","end","value","duration","separator","cardDate","Date","toDateString","cardInfo","recoveredBlock","deathsBlock","loaderSection","loader","url","fetchData","country","a","changeablUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","featchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","countryName","i","key","FormControl","NativeSelect","defaultValue","onChange","e","target","formControl","App","state","fetchedData","setState","this","wrapper","covidTitle","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0d89b4fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport CN from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    if (!confirmed) {\r\n        return (\r\n            <>\r\n                <div className={styles.loaderSection}>\r\n                    <div className={styles.loader}></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={CN(styles.card, styles.infected)}>\r\n                    <CardContent className={CN(styles.cardBlock, styles.infectedBlock)}>\r\n                        <Typography color=\"textSecondary\" gutterBottom className={styles.cardTitle}>Infected</Typography>\r\n                        <Typography varaint=\"h4\" className={styles.cardNumber}>\r\n                            <CountUp start={0} end={confirmed.value} duration={3} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={styles.cardDate}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\" className={styles.cardInfo}>Number of Active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={CN(styles.card, styles.recovered)}>\r\n                    <CardContent className={CN(styles.cardBlock, styles.recoveredBlock)}>\r\n                        <Typography color=\"textSecondary\" gutterBottom className={styles.cardTitle}>Recoverd</Typography>\r\n                        <Typography varaint=\"h4\" className={styles.cardNumber}>\r\n                            <CountUp start={0} end={recovered.value} duration={3} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={styles.cardDate}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\" className={styles.cardInfo}>Number of recoverd from if COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={CN(styles.card, styles.deaths)}>\r\n                    <CardContent className={CN(styles.cardBlock, styles.deathsBlock)}>\r\n                        <Typography color=\"textSecondary\" gutterBottom className={styles.cardTitle}>Deaths</Typography>\r\n                        <Typography varaint=\"h4\" className={styles.cardNumber}>\r\n                            <CountUp start={0} end={deaths.value} duration={3} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={styles.cardDate}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\" className={styles.cardInfo}>Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeablUrl = url;\r\n\r\n    if (country) {\r\n        changeablUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeablUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from './../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const featchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        featchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#333fff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255,0,0,0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />\r\n            ) : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recover', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['#2980b9', '#27ae60', '#c0392b'],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` }\r\n                    }}\r\n                />\r\n            ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from './../../api';\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    const countryName = fetchedCountries.map((country, i) => (\r\n        <option key={i} value={country}>{country}</option>\r\n    ))\r\n\r\n    return (\r\n        <FormControl>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)} className={styles.formControl}>\r\n                <option value=\"\">Total in World</option>\r\n                {countryName}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\nexport default CountryPicker;","import React, { Component } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData })\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country })\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.covidTitle}>\r\n                        <h1>COVID-19 Tracker</h1>\r\n                    </div>\r\n                    <Cards data={data} />\r\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    <Chart data={data} country={country} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__25txT\",\"container\":\"App_container__3Yrze\",\"covidTitle\":\"App_covidTitle__3rYAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__34-Gj\",\"card\":\"Cards_card__2cvK_\",\"cardBlock\":\"Cards_cardBlock__1vPNA\",\"cardTitle\":\"Cards_cardTitle__2Pw8o\",\"cardNumber\":\"Cards_cardNumber__xjm6X\",\"cardDate\":\"Cards_cardDate__2dsqI\",\"cardInfo\":\"Cards_cardInfo__E3FpG\",\"infectedBlock\":\"Cards_infectedBlock__2E9kF\",\"recoveredBlock\":\"Cards_recoveredBlock__3kZ4c\",\"deathsBlock\":\"Cards_deathsBlock__x5GHI\",\"infected\":\"Cards_infected__37P4M\",\"recovered\":\"Cards_recovered__xV5mp\",\"deaths\":\"Cards_deaths__3WjYm\",\"loaderSection\":\"Cards_loaderSection__2vlpE\",\"loader\":\"Cards_loader__3mFdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3oRGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2hss6\"};"],"sourceRoot":""}